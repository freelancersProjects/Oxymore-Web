name: Production Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-prod:
    name: Backend - Production (Strict Quality)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install deps
        run: npm install
      - name: Lint (strict mode - no warnings allowed)
        run: npm run lint
      - name: Type Check (strict)
        run: npx tsc --noEmit --strict
      - name: Build
        run: npm run build
      - name: Test (if available)
        run: npm test || echo "No tests configured"

  ui-lib-prod:
    name: UI Library - Production Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/oxm-ui
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install deps
        run: npm install
      - name: Build (production optimized)
        run: npm run build
      - name: Upload UI Library artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ui-library-prod
          path: packages/oxm-ui/dist
          retention-days: 30

  app-prod:
    name: App - Production Build
    runs-on: ubuntu-latest
    needs: [ui-lib-prod]
    defaults:
      run:
        working-directory: apps/oxymore-app
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install deps (root)
        working-directory: .
        run: npm install --workspaces --include-workspace-root
      - name: Download UI Library artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-library-prod
          path: packages/oxm-ui/dist
      - name: Lint (strict mode)
        run: npm run lint
      - name: Lint SCSS (strict mode)
        run: npm run lint:scss
      - name: Build (production optimized)
        run: npm run build
      - name: Test (if available)
        run: npm test || echo "No tests configured"

  admin-prod:
    name: Admin - Production Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/oxymore-admin
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install deps
        run: npm install
      - name: Lint (strict mode)
        run: npm run lint
      - name: Build (production optimized)
        run: npm run build
      - name: Test (if available)
        run: npm test || echo "No tests configured"

  site-prod:
    name: Site - Production Build
    runs-on: ubuntu-latest
    needs: [ui-lib-prod]
    defaults:
      run:
        working-directory: apps/oxymore-site
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install deps (root)
        working-directory: .
        run: npm install --workspaces --include-workspace-root
      - name: Download UI Library artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-library-prod
          path: packages/oxm-ui/dist
      - name: Lint (strict mode)
        run: npm run lint
      - name: Lint SCSS (strict mode)
        run: npm run lint:scss
      - name: Build (production optimized)
        run: npm run build
      - name: Test (if available)
        run: npm test || echo "No tests configured"

  # DÃ©ploiement en production (avec approbation manuelle)
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [backend-prod, app-prod, admin-prod, site-prod]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Deploy to Production
        run: |
          echo "ðŸš€ Deploying to production environment..."
          echo "This would typically deploy to production servers"
          # Ici tu peux ajouter tes commandes de dÃ©ploiement production
